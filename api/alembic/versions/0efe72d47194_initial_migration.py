"""Initial migration

Revision ID: 0efe72d47194
Revises: 
Create Date: 2024-07-10 09:11:47.039558

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0efe72d47194'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('memes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tasks_task',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('author_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('executor_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('status_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users_profile.id'], name='tasks_task_author_id_33a50930_fk_users_profile_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['executor_id'], ['users_profile.id'], name='tasks_task_executor_id_1fab67ee_fk_users_profile_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['status_id'], ['statuses_status.id'], name='tasks_task_status_id_899d2b90_fk_statuses_status_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='tasks_task_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('tasks_task_status_id_899d2b90', 'tasks_task', ['status_id'], unique=False)
    op.create_index('tasks_task_executor_id_1fab67ee', 'tasks_task', ['executor_id'], unique=False)
    op.create_index('tasks_task_author_id_33a50930', 'tasks_task', ['author_id'], unique=False)
    op.create_table('auth_group',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='auth_group_pkey'),
    sa.UniqueConstraint('name', name='auth_group_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('auth_group_name_a6ea08ec_like', 'auth_group', ['name'], unique=False)
    op.create_table('authtoken_token',
    sa.Column('key', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['referral_app_profile.id'], name='authtoken_token_user_id_35299eff_fk_referral_app_profile_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('key', name='authtoken_token_pkey'),
    sa.UniqueConstraint('user_id', name='authtoken_token_user_id_key')
    )
    op.create_index('authtoken_token_key_10f0b77e_like', 'authtoken_token', ['key'], unique=False)
    op.create_table('auth_group_permissions',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'], name='auth_group_permissions_group_id_b120cbf9_fk_auth_group_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'], name='auth_group_permissio_permission_id_84c5c92e_fk_auth_perm', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='auth_group_permissions_pkey'),
    sa.UniqueConstraint('group_id', 'permission_id', name='auth_group_permissions_group_id_permission_id_0cd325b0_uniq')
    )
    op.create_index('auth_group_permissions_permission_id_84c5c92e', 'auth_group_permissions', ['permission_id'], unique=False)
    op.create_index('auth_group_permissions_group_id_b120cbf9', 'auth_group_permissions', ['group_id'], unique=False)
    op.create_table('statuses_status',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='statuses_status_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('auth_user',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=254), autoincrement=False, nullable=False),
    sa.Column('is_staff', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('date_joined', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='auth_user_pkey'),
    sa.UniqueConstraint('username', name='auth_user_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('auth_user_username_6821ab7c_like', 'auth_user', ['username'], unique=False)
    op.create_table('referral_app_profile',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=254), autoincrement=False, nullable=False),
    sa.Column('is_staff', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('date_joined', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('ref_code', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('ref_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='referral_app_profile_pkey'),
    sa.UniqueConstraint('phone', name='referral_app_profile_phone_key'),
    sa.UniqueConstraint('ref_code', name='referral_app_profile_ref_code_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('referral_app_profile_ref_code_56fb11ef_like', 'referral_app_profile', ['ref_code'], unique=False)
    op.create_index('referral_app_profile_phone_48accd15_like', 'referral_app_profile', ['phone'], unique=False)
    op.create_table('users_user_groups',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'], name='users_user_groups_group_id_9afc8d0e_fk_auth_group_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users_user.id'], name='users_user_groups_user_id_5f6f5a90_fk_users_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='users_user_groups_pkey'),
    sa.UniqueConstraint('user_id', 'group_id', name='users_user_groups_user_id_group_id_b88eab82_uniq')
    )
    op.create_index('users_user_groups_user_id_5f6f5a90', 'users_user_groups', ['user_id'], unique=False)
    op.create_index('users_user_groups_group_id_9afc8d0e', 'users_user_groups', ['group_id'], unique=False)
    op.create_table('referral_app_profile_ref_received',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('from_profile_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('to_profile_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['from_profile_id'], ['referral_app_profile.id'], name='referral_app_profile_from_profile_id_07db1aaf_fk_referral_', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['to_profile_id'], ['referral_app_profile.id'], name='referral_app_profile_to_profile_id_40086cfa_fk_referral_', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='referral_app_profile_ref_received_pkey'),
    sa.UniqueConstraint('from_profile_id', 'to_profile_id', name='referral_app_profile_ref_from_profile_id_to_profi_be9a7d7c_uniq')
    )
    op.create_index('referral_app_profile_ref_received_to_profile_id_40086cfa', 'referral_app_profile_ref_received', ['to_profile_id'], unique=False)
    op.create_index('referral_app_profile_ref_received_from_profile_id_07db1aaf', 'referral_app_profile_ref_received', ['from_profile_id'], unique=False)
    op.create_table('urls',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.DATE(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='urls_pkey'),
    sa.UniqueConstraint('name', name='urls_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('users_user_user_permissions',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'], name='users_user_user_perm_permission_id_0b93982e_fk_auth_perm', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users_user.id'], name='users_user_user_permissions_user_id_20aca447_fk_users_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='users_user_user_permissions_pkey'),
    sa.UniqueConstraint('user_id', 'permission_id', name='users_user_user_permissions_user_id_permission_id_43338c45_uniq')
    )
    op.create_index('users_user_user_permissions_user_id_20aca447', 'users_user_user_permissions', ['user_id'], unique=False)
    op.create_index('users_user_user_permissions_permission_id_0b93982e', 'users_user_user_permissions', ['permission_id'], unique=False)
    op.create_table('django_session',
    sa.Column('session_key', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('session_data', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('expire_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('session_key', name='django_session_pkey')
    )
    op.create_index('django_session_session_key_c0390e0f_like', 'django_session', ['session_key'], unique=False)
    op.create_index('django_session_expire_date_a5c62663', 'django_session', ['expire_date'], unique=False)
    op.create_table('referral_app_profile_user_permissions',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('profile_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'], name='referral_app_profile_permission_id_e7b7f15c_fk_auth_perm', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['referral_app_profile.id'], name='referral_app_profile_profile_id_ea74fe39_fk_referral_', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='referral_app_profile_user_permissions_pkey'),
    sa.UniqueConstraint('profile_id', 'permission_id', name='referral_app_profile_use_profile_id_permission_id_a3689b0f_uniq')
    )
    op.create_index('referral_app_profile_user_permissions_profile_id_ea74fe39', 'referral_app_profile_user_permissions', ['profile_id'], unique=False)
    op.create_index('referral_app_profile_user_permissions_permission_id_e7b7f15c', 'referral_app_profile_user_permissions', ['permission_id'], unique=False)
    op.create_table('django_content_type',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('app_label', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('model', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='django_content_type_pkey'),
    sa.UniqueConstraint('app_label', 'model', name='django_content_type_app_label_model_76bd3d3b_uniq'),
    postgresql_ignore_search_path=False
    )
    op.create_table('token_blacklist_outstandingtoken',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('token', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('jti', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users_user.id'], name='token_blacklist_outs_user_id_83bc629a_fk_users_use', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='token_blacklist_outstandingtoken_pkey'),
    sa.UniqueConstraint('jti', name='token_blacklist_outstandingtoken_jti_hex_d9bdf6f7_uniq'),
    postgresql_ignore_search_path=False
    )
    op.create_index('token_blacklist_outstandingtoken_user_id_83bc629a', 'token_blacklist_outstandingtoken', ['user_id'], unique=False)
    op.create_index('token_blacklist_outstandingtoken_jti_hex_d9bdf6f7_like', 'token_blacklist_outstandingtoken', ['jti'], unique=False)
    op.create_table('django_migrations',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('app', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('applied', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='django_migrations_pkey')
    )
    op.create_table('referral_app_profile_groups',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('profile_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'], name='referral_app_profile_groups_group_id_4d7f315f_fk_auth_group_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['referral_app_profile.id'], name='referral_app_profile_profile_id_c7822fff_fk_referral_', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='referral_app_profile_groups_pkey'),
    sa.UniqueConstraint('profile_id', 'group_id', name='referral_app_profile_groups_profile_id_group_id_bebcc5b1_uniq')
    )
    op.create_index('referral_app_profile_groups_profile_id_c7822fff', 'referral_app_profile_groups', ['profile_id'], unique=False)
    op.create_index('referral_app_profile_groups_group_id_4d7f315f', 'referral_app_profile_groups', ['group_id'], unique=False)
    op.create_table('tickets_ticket',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('closed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('priority', sa.VARCHAR(length=4), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=5), autoincrement=False, nullable=False),
    sa.Column('assigned_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('author_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['assigned_id'], ['users_user.id'], name='tickets_ticket_assigned_id_ccf68b14_fk_users_user_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users_user.id'], name='tickets_ticket_author_id_6d7c491a_fk_users_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='tickets_ticket_pkey')
    )
    op.create_index('tickets_ticket_author_id_6d7c491a', 'tickets_ticket', ['author_id'], unique=False)
    op.create_index('tickets_ticket_assigned_id_ccf68b14', 'tickets_ticket', ['assigned_id'], unique=False)
    op.create_table('url_checks',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('url_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('status_code', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('h1', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.DATE(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['url_id'], ['urls.id'], name='url_checks_url_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='url_checks_pkey')
    )
    op.create_table('auth_permission',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('codename', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['content_type_id'], ['django_content_type.id'], name='auth_permission_content_type_id_2f476e4b_fk_django_co', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='auth_permission_pkey'),
    sa.UniqueConstraint('content_type_id', 'codename', name='auth_permission_content_type_id_codename_01ab375a_uniq')
    )
    op.create_index('auth_permission_content_type_id_2f476e4b', 'auth_permission', ['content_type_id'], unique=False)
    op.create_table('users_profile',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('profile_pic', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name='users_profile_user_id_2112e78d_fk_auth_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='users_profile_pkey'),
    sa.UniqueConstraint('user_id', name='users_profile_user_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('time_tracker_task',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('timespend', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='time_tracker_task_pkey')
    )
    op.create_table('users_user',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=254), autoincrement=False, nullable=False),
    sa.Column('is_staff', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('date_joined', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('photo', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('date_birth', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(length=2), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_user_pkey'),
    sa.UniqueConstraint('username', name='users_user_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('users_user_username_06e46fe6_like', 'users_user', ['username'], unique=False)
    op.create_table('token_blacklist_blacklistedtoken',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('blacklisted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('token_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['token_id'], ['token_blacklist_outstandingtoken.id'], name='token_blacklist_blacklistedtoken_token_id_3cc7fe56_fk', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='token_blacklist_blacklistedtoken_pkey'),
    sa.UniqueConstraint('token_id', name='token_blacklist_blacklistedtoken_token_id_key')
    )
    op.create_table('django_admin_log',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('action_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('object_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('object_repr', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('action_flag', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('change_message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('content_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.CheckConstraint('action_flag >= 0', name='django_admin_log_action_flag_check'),
    sa.ForeignKeyConstraint(['content_type_id'], ['django_content_type.id'], name='django_admin_log_content_type_id_c4bce8eb_fk_django_co', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users_user.id'], name='django_admin_log_user_id_c564eba6_fk_users_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='django_admin_log_pkey')
    )
    op.create_index('django_admin_log_user_id_c564eba6', 'django_admin_log', ['user_id'], unique=False)
    op.create_index('django_admin_log_content_type_id_c4bce8eb', 'django_admin_log', ['content_type_id'], unique=False)
    op.create_table('labels_label',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='labels_label_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('tasks_task_labels',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('label_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['label_id'], ['labels_label.id'], name='tasks_task_labels_label_id_fdb0c9e0_fk_labels_label_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks_task.id'], name='tasks_task_labels_task_id_78ec38df_fk_tasks_task_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='tasks_task_labels_pkey'),
    sa.UniqueConstraint('task_id', 'label_id', name='tasks_task_labels_task_id_label_id_b59bd62c_uniq')
    )
    op.create_index('tasks_task_labels_task_id_78ec38df', 'tasks_task_labels', ['task_id'], unique=False)
    op.create_index('tasks_task_labels_label_id_fdb0c9e0', 'tasks_task_labels', ['label_id'], unique=False)
    op.drop_table('memes')
    # ### end Alembic commands ###
