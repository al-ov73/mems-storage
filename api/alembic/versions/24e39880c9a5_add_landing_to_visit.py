"""add_landing_to_visit

Revision ID: 24e39880c9a5
Revises: 0c8363644847
Create Date: 2025-07-14 22:18:12.188998+04:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '24e39880c9a5'
down_revision: Union[str, None] = '0c8363644847'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('labels_meme')
    op.drop_table('visits')
    op.drop_table('comments')
    op.drop_table('likes')
    op.drop_table('users')
    op.drop_table('messages')
    op.drop_table('labels')
    op.drop_table('memes')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('memes',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('memes_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('link', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('source_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('source_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('published', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('checked', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('preview', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='memes_pkey'),
    sa.UniqueConstraint('link', name='memes_link_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('labels',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('labels_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='labels_pkey'),
    sa.UniqueConstraint('title', name='labels_title_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('messages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name='messages_author_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='messages_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('registered_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_admin', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('username', name='users_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('likes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('meme_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name='likes_author_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['meme_id'], ['memes.id'], name='likes_meme_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'author_id', 'meme_id', name='likes_pkey')
    )
    op.create_table('comments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('author_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('meme_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name='comments_author_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['author_name'], ['users.username'], name='comments_author_name_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['meme_id'], ['memes.id'], name='comments_meme_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='comments_pkey')
    )
    op.create_table('visits',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('provider', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('organization', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('region', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('visit_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('ip', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_new_user', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='visits_pkey')
    )
    op.create_table('labels_meme',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('label_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('meme_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['label_id'], ['labels.id'], name='labels_meme_label_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['meme_id'], ['memes.id'], name='labels_meme_meme_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='labels_meme_pkey')
    )
    # ### end Alembic commands ###
